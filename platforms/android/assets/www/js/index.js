
var app = {
    // Application Constructor
    initialize: function() {
        //this.bindEvents();
        lightState = false;
        //csrmesh.storeMesh();
        //csrmesh.initMesh();
    },
    onDeviceReady: function() {
        try{
            //csrmesh.initMesh();
            console.log("csrmesh init success");
            mesh = window.mesh1;
            console.log(mesh)
            console.log("init mesh after deviceReady success on app");
            // 加载远程页面
            loadRomoteWeb();
        }catch(e){
            console.log("csrmesh init error"+e);
        }
        app.receivedEvent('deviceready');
    },
    // Update DOM on a Received Event
    receivedEvent: function(id) {
        console.log('Received Event: ' + id);
    }
};
app.initialize();
//var newGroupIndex = 5;

document.addEventListener("deviceready",function(){
    try{
        csrmesh.initMesh();
        console.log("csrmesh init success");
        mesh = window.mesh1;
        console.log(mesh)
        console.log("init mesh after deviceReady success on document");
        loadRomoteWeb();
    }catch(e){
        console.log("csrmesh init error"+e);
    }
},false);

function loadRomoteWeb(){
    try{
        var curVersion = localStorage.getItem("version");
        $.ajax({
            url:"http://47.93.228.84:3315/remoteLoad/version",
            type:"GET",
            success:function(version){
                console.log("version is ",version);
                //$("body").innerHTML = data;
                if( curVersion != version ) {
                    $.ajax({
                        url:"http://47.93.228.84:3315/remoteLoad",
                        type:"GET",
                        success:function(datas){
                            console.log("success in get remote HTML data ");
                            redoBody(datas.body,datas.redo);
                            try{
                                saveRedo(version,datas.body,datas.redo);
                            }catch(ee){
                                console.log("store the html data error ",ee);
                            }
                        },
                        error:function(e){
                            console.log("remote HTML5 error",e);
                            // 可能会产生非法错误，redo 为数组的字符串形式
                            redoBody(localStorage.getItem("body"),JSON.parse(localStorage.getItem("redo")));
                        }
                    });
                }else{
                    redoBody(localStorage.getItem("body"),JSON.parse(localStorage.getItem("redo")));
                }
            },
            error:function(e){
                // 若未更新，则从本地获取
                console.log("error",e);
                redoBody(localStorage.getItem("body"),JSON.parse(localStorage.getItem("redo")));
            }
        })

        //var data = "<div style='background:red'>abcdsadfa</div>";// 可生成
        //$("body").innerHTML = data;
        //document.getElementsByTagName("body")[0].innerHTML = data;// 可生成
        //var data = '<div class="chenliang">陈亮</div>';//可以
        //var data = '<div class="chenliang">陈亮</div>';//可以,加样式测试 --- 成功
        //document.body.innerHTML = data1; // 成功，准备测试，是否没有将jqm 的css样式加载进来
        //document.body.innerHTML = data2;// 测试有无加载上 JQM 的样式;略微有所不同，猜测可能是class也删除的原因；
        //document.body.innerHTML = data1;
        //$('body').listview('refresh');
        //$("body").innerHTML = data;// 好像可用性不好，不能使用
        //var myDiv = document.createElement('div');
        //myDiv.innerHTML = data1;
        //document.body.appendChild(myDiv);
       /* console.log("加载页面动作启动");

        document.body.innerHTML = data1+data2+data3+data4+data5+data6;
        $('body').trigger('create');
//   使用 $.mobile.changePage("#page1");方法尝试 --- 成功
        $.mobile.changePage("#scanPage");
        $.mobile.changePage("#controlPage");
        $.mobile.changePage("#settingPage");
        $.mobile.changePage("#groupSet");
        $.mobile.changePage("#lightSet");
        $.mobile.changePage("#AddGroup");*/
    //  加入 JS 代码字符串
    //    var scriptCode = ' \n var lightState = false; \n var groupBelong = true; \n var mDeviceID = 0; \n /*2017年3月14日*/ \n var store = function(){ \n     csrmesh.storeMesh(); \n } \n var read = function(){ \n     try{ \n         csrmesh.storeMesh(); \n         alert(csrmesh.initMesh()) \n     }  catch(e){ \n         alert(e); \n     } \n } \n  \n var fmeshL = function(){ \n     alert(window.localStorage.getItem("mesh")); \n } \n var fmeshW = function(){ \n     alert(JSON.stringify(window.mesh1)); \n } \n  \n  \n  \n var startScan = function(){ \n     csrmesh.startScan(); \n } \n  \n var blueClick = function(){ \n     if(groupBelong){ \n         csrmesh.setGroups() \n     } \n } \n  \n var stopScan = function(){ \n     csrmesh.stopScan(); \n } \n  \n var findMesh = function(){ \n     try{ \n         csrmesh.findMesh("00:02:5B:00:15:84"); \n     } catch(e){ \n         alert("error in csrmesh.findMesh :"+e); \n     } \n } \n  \n var setPower = function(){ \n  \n     try{ \n         csrmesh.setPower(mDeviceID,lightState?"on":"off"); \n     } catch(e){ \n         alert("error in csrmesh.setPower :"+e); \n     } \n     lightState = !lightState; \n } \n var groupId = [0,1,2,3,4]; \n var i =0 ; \n var setColor= function(){ \n  \n     try{ \n         var deviceId = groupId[i]; \n         alert("groupID send to control color :"+deviceId); \n         var color = [255, 0 , 8388607, 16700000, 65280][Math.floor(Math.random()*5)] \n         csrmesh.setColor(deviceId,color); \n     } catch(e){ \n     } \n     if(i<groupId.length){ \n         i = i+1; \n     }else{ \n         i=0; \n     } \n  \n } \n  \n  \n  \n var uuidHash ; \n var getAssociableDevice = function(){ \n     var success = function(array){ \n         uuidHash = array.split(",")[0]; \n         alert("callback success of associate :"+array+" JS uuidHash is : "+uuidHash); \n  \n     } \n     var error = function(){ \n         alert("error in getAssociableDevice callback"); \n     } \n      \n } \n  \n var associatDevice = function(){ \n     var success = function(){ \n         alert("associatDevice from cordova success"); \n     } \n     var error = function(){ \n         alert("error in associatDevice"); \n     } \n  \n } \n  \n var setDeviceToGroups = function(deviceId,groups){ \n     csrmesh.setGroups(deviceId,groups); \n  \n } \n  \n var getDeviceID = function(){ \n     var success = function(deviceID){ \n         alert("getDevicID is :"+deviceID); \n         mDeviceID = deviceID; \n         groupId.push(deviceID); \n     } \n     var error = function(){ \n         alert("error in getDeviceID "); \n     } \n     csrmesh.getDeviceId(parseInt(uuidHash),success,error); \n } \n  \n var setGroup = function(){ \n     alert("send to "+mDeviceID +" with "+groupBelong); \n     if(groupBelong){ \n         setDeviceToGroups(mDeviceID,[1,3]); \n     }else{ \n         setDeviceToGroups(mDeviceID,[2,4]); \n     } \n     groupBelong = !groupBelong; \n } \n  \n document.getElementById("blueClick").onclick = blueClick; \n document.getElementById("startScan").onclick = startScan; \n document.getElementById("stopScan").onclick = stopScan; \n document.getElementById("findMesh").onclick = findMesh; \n document.getElementById("setPower").onclick = setPower; \n document.getElementById("setColor").onclick = setColor; \n document.getElementById("getAssociableDevice").onclick = getAssociableDevice; \n document.getElementById("associateDevice").onclick = associatDevice; \n document.getElementById("setGroup").onclick = setGroup; \n document.getElementById("getDevcieId").onclick = getDeviceID; \n document.getElementById("store").onclick = store; \n document.getElementById("read").onclick = read; \n document.getElementById("color").onclick = reloadColorPage; \n document.getElementById("meshL").onclick = fmeshL; \n document.getElementById("meshW").onclick = fmeshW;';
/*        var scriptCode = ' function rgbToHsl(r, g, b){     r /= 255, g /= 255, b /= 255;     var max = Math.max(r, g, b), min = Math.min(r, g, b);     var h, s, l = (max + min) / 2;      if(max == min){     }else{         var d = max - min;         s = l > 0.5 ? d / (2 - max - min) : d / (max + min);         switch(max){             case r: h = (g - b) / d + (g < b ? 6 : 0); break;             case g: h = (b - r) / d + 2; break;             case b: h = (r - g) / d + 4; break;         }         h /= 6;     }     var a = Number(parseInt(h*255)).toString(16);     var b = Number(parseInt(s*255)).toString(16);     var c = Number(parseInt(l*255)).toString(16);      return "#"+ (a.length>1?a:("0"+a))+ (b.length>1?b:("0"+b))+ (c.length>1?c:("0"+c)); } var intToHex = function(color){     var result = "";     var hex = Number(color).toString(16);     console.log(hex)     for(var i=0;i<6-hex.length;i++){         result+="0";     }     hex = result+hex;     console.log(hex)     return rgbToHsl(parseInt(hex.slice(0,2),16),parseInt(hex.slice(2,4),16),parseInt(hex.slice(4,6),16)); };    $(document).on("click",".edit",function(event,data){     if(event.target.parentNode.parentNode.id == "groupList"){         console.log("open groupSet")         $("#groupSet").removeAttr("hidden");         var string = ($(event.target.parentNode).find("h3").context.outerText).trim().split(/\s+/);         console.log(string);         var lights = string.splice(1,string.length-2);         console.log(lights)          $("#groupSet input:first").attr("value",string[0]);         $("#saveChangeG").attr("name",$(event.target.parentNode).find("h3").attr("name"));         $("#groupSet fieldset label").remove();         for(var light in mesh.lights){             var label = document.createElement("label");             label.innerHTML = "<input type=\"checkbox\" name=\""+mesh.lights[light].deviceId+"\" value=\""+mesh.lights[light].deviceId+"\""+((lights.indexOf(""+mesh.lights[light].deviceId)>-1)?" checked>":">")+mesh.lights[light].name             $("#groupSet fieldset").append(label)         }          $("#groupSet").popup();         console.log($("#groupSet"));          $("#groupSet").popup("open");     }     else if(event.target.parentNode.parentNode.id == "lightList"){         console.log("open lightList");         $("#lightSet").removeAttr("hidden");         var string = ($(event.target.parentNode).find("h3").context.outerText).trim().split(/\s+/);         console.log(string);         var groups =  string.splice(1,string.length-2);         $("#lightSet input:first").attr("value",string[0]);         $("#saveChangeL").attr("name",$(event.target.parentNode).find("h3").attr("name"));         $("#lightSet fieldset label").remove();         for(var group in mesh.groups){             var label = document.createElement("label");             label.innerHTML = "<input type=\"checkbox\" name=\""+mesh.groups[group].deviceId+((groups.indexOf(""+mesh.groups[group].deviceId)>-1)?"\" checked>":"\">")+mesh.groups[group].name;             $("#lightSet fieldset").append(label);         }         $("#lightSet").popup();         $("#lightSet").popup("open");      }  })    $(document).on("click",".deleteDevice",function(e,d){     try{         csrmesh.deleteDevice(parseInt( $(e.target.parentNode).find(">a").attr("name") ) );         console.log("deleteDevice : " + parseInt( $(e.target.parentNode).find(">a").attr("name")) );     } catch (e1){         console.log("deleteDevice error in line:158"+e1+"\n"+parseInt( $(e.target.parentNode).find(">a").attr("name") ))     }     try{         $("#groupSet").popup("close");     } catch (e){         $("#lightSet").popup("close");     } })  $(document).on("click","#saveChangeG",function(event,data){     console.log("saveChange clicked");     var newLights = [];     $(event.target.parentNode).find("input:checked").each(function(){         newLights.push( parseInt($(this).context.name) );     });     try{         console.log( "组："+parseInt(  $(this).attr("name") ) + " 重置："+ newLights.toString() )         window.mesh1.getGroup(parseInt($(this).attr("name"))).name = $(event.target.parentNode).find("input:text").val();         csrmesh.setLights(parseInt(  $(this).attr("name") ),newLights,function(e){console.log("组设置lights success:"+e)},function(e){console.log("组设置lights error:"+e)});         csrmesh.storeMesh();     } catch (e){         console.log("save Group change error"+e)     }     $("#groupSet").popup("close");  listShow = "associate"   $(document).on("click","#startScan",function(e,d){     var list = document.getElementById("deviceList");     if(listShow == "associate"){         list.innerHTML = "";         listShow = "scan";     }         var success = function(ble){             if(listShow == "associate"){                 return ;             }             if(ble.isNew || ble.ISNEW){                 var li = document.createElement("li");                 li.setAttribute("class","devicePrepar ui-li-has-alt ui-last-child");                 li.innerHTML = " <a href=\"#\" class=\"ui-btn\"><h3>"+ble.name+"</h3><td>"+ble.address+"</td></a><a href=\"#controlPage\" name=\""+ ble.address + "\" class=\"connect ui-btn ui-btn-icon-notext ui-icon-action\" ></a>";                 $("#deviceList").append(li)             }         };         var error = function(error){             alert("error in ");         };         csrmesh.startScan(success,error); });  $(document).on("click",".connect",function(e,d){     console.log("选择的设备 : "+$(this).attr("name"));     csrmesh.findMesh($(this).attr("name"),function(a){alert("findMesh "+a)},function(){});     csrmesh.stopScan(); });   $(document).on("click",".controlPageButton",function(e,d){     console.log( "groupControl has "+$("#groupControl").children().length );     if(  $("#groupControl").children().length >0 ){         $("#groupControl").empty();      }     if(  $("#lightControl").children().length >0 ){         $("#groupControl").empty();     }      try{         var groups =mesh.groups;           for(var i =0 ;i<groups.length;i++){             (function(i){                 var newChild = document.createElement("tr")                 var aaa = "group"+groups[i].deviceId;                 newChild.innerHTML = "<td style=\"width: 70%;height:50px;border-top:  solid;border-color: bisque;text-align-all:center\">"+groups[i].name+"</td ><td style=\"border-top:  solid;border-color: bisque;\"></td><td style=\"border-top:  solid;border-color: bisque;\"><a id="+aaa+" class=\" ui-icon-right\">"+groups[i].deviceId+"</a>"+"</td>"                 newChild.setAttribute("value",groups[i].deviceId);                 newChild.setAttribute("style","width:100%;border-bottom: dashed;border-color:red")                 newChild.onclick=(function(){                     return function(aa){                         console.log(aa.target.parentNode.getAttribute("value"))                             aa.stopPropagation();                         }                             window.event.cancelBubble=true;                         }                     }                 })()                  $("#groupControl").append(newChild)                 console.log(groups[i].color)                 $("#"+aaa).colorpicker({                     color: ( parseInt(groups[i].color) >= 0 )?intToHex(parseInt(groups[i].color)):(groups[i].color),                     colorSpace: "hsl",                     displayColor:"hex",                     labels:true                 });                 $("#"+aaa).on("newcolor",function(ev,color){                     console.log("the control deviceId is "+groups[i].deviceId);                     csrmesh.setColor(parseInt(groups[i].deviceId),parseInt( color.toString("rgb").slice(1),16),function(a){console.log("setColor success in page")});                     csrmesh.setBrightness(parseInt(groups[i].deviceId),parseFloat(color.toCssString("hsl").split("%")[1].split(",")[1]));                     csrmesh.storeMesh()                     $("#colorOfCurrent").css("background-color",color.toString("rgb"));                     console.log(color.toString("hsla"))                 })             })(i);         }         var lights = mesh.lights;         for(var i =0 ;i<lights.length;i++){             (function(i){                 var newChild = document.createElement("tr")                 var aaa = "light"+lights[i].deviceId;                 newChild.innerHTML = "<td style=\"width: 70%;height:50px;border-top:  solid;border-color: rosybrown;text-align-all:center\">"+lights[i].name+"</td ><td style=\"border-top:  solid;border-color:rosybrown;\"></td><td style=\"border-top:  solid;border-color: rosybrown;text-align: left\" ><a id="+aaa+" class=\" ui-icon-right\">"+lights[i].deviceId+"</a>"+"</td>"                 newChild.setAttribute("value",lights[i].deviceId);                 newChild.setAttribute("style","width:100%;")                 newChild.onclick=(function(){                     return function(aa){                         console.log(aa.target.parentNode.getAttribute("value"))                             aa.stopPropagation();                         }                             window.event.cancelBubble=true;                         }                     }                 })()                 $("#groupControl").append(newChild)                 console.log(aaa)                 $("#"+aaa).colorpicker({                     color: ( parseInt(lights[i].color)>=0 )?intToHex(parseInt(lights[i].color)):(lights[i].color),                     colorSpace: "hsl",                     displayColor:"hex",                     labels:true                 });                 $("#"+aaa).on("newcolor",function(ev,color){                     console.log("the control deviceId is "+lights[i].deviceId)                     console.log(color.toString("hsla"));                     csrmesh.setColor(parseInt(lights[i].deviceId),parseInt( color.toString("rgb").slice(1),16),function(a){console.log("setColor success in page")});                     csrmesh.setBrightness(parseInt(lights[i].deviceId),parseFloat(color.toCssString("hsl").split("%")[1].split(",")[1]));                     csrmesh.storeMesh()                     $("#colorOfCurrent").css("background-color",color.toString("rgb"));                 })             })(i);         }     } catch (e){         console.log("生成可控制设备时失败： error @line:365"+e)     }   })  $(document).on("click","#stopScan",function(e,d){    csrmesh.stopScan(); });  $(document).on("click","#findAssociat",function(e,d){     console.log("findAssociat action begin ");     var list = document.getElementById("deviceList");     if(listShow == "scan"){         list.innerHTML = "";         listShow = "associate";     }     var success = function(ble){         if(listShow == "scan"){             return;         }         var li = document.createElement("li");         li.setAttribute("class","devicePrepar ui-li-has-alt ui-last-child");         li.innerHTML = " <a href=\"#\" class=\"ui-btn\"><h3>"+ble.name+"</h3><td>"+ble.uuidHash+"</td></a><a href=\"#\" name=\"" + ble.uuidHash + "\" class=\"associate ui-btn ui-btn-icon-notext ui-icon-action\" ></a>";         $("#deviceList").append(li)     };     var error = function(error){         alert("error in findAssociate:305");     };     csrmesh.getAssociableDevice(success,error); })  $(document).on("click",".associate",function(e,d){     var success = function(deviceID){         console.log("associate success with :"+deviceID.uuidHash);         $("#lightSet").removeAttr("hidden");         $("#lightSet input:first").attr("value",window.mesh1.getLight(deviceID.deviceId).name);         $("#lightSet fieldset label").remove();         for(var group in mesh.groups){             var label = document.createElement("label");             label.innerHTML = "<input type=\"checkbox\" name=\""+mesh.groups[group].deviceId+"\">"+mesh.groups[group].name;             $("#lightSet fieldset").append(label);         }         $("#lightSet").popup();         $("#lightSet").popup("open");     }     function error(e){         console.log("error in associate -- line:319");     }     csrmesh.associate($(this).attr("name"),success,error);     csrmesh.stopScan();     csrmesh.storeMesh(); });  $(document).on("click","#saveChangeL",function(event,d){     var newGroups = [];     $(event.target.parentNode).find("input:checked").each(function(){         newGroups.push( parseInt($(this).context.name) );      });     if(newGroups.length>4){         $("#lightSet").popup("close");         console.log("灯泡分的组超出范围！！！")         return ;     }     try{         window.mesh1.getLight(parseInt($(this).attr("name"))).name = $(event.target.parentNode).find("input:text").val();          window.mesh1.getLight( parseInt(  $(this).attr("name") )).setGroups(newGroups);         csrmesh.setGroups(parseInt(  $(this).attr("name") ),newGroups,function(a){console.log("配置分组：success")},function(a){console.log("配置分组：error"+a)});         console.log("原 "+parseInt($(this).attr("name"))+" 保存灯泡设置: "+newGroups +" 名： "+$(event.target.parentNode).find("input:text").val());         csrmesh.storeMesh();     } catch (e){         console.log("save Light change error"+e)     }     $("#lightSet").popup("close"); })  $(document).on("click",".settingBottom",function(){     $("#groupList li").remove();     for(var gIndex in mesh.groups){         var group = mesh.groups[gIndex];         var li = document.createElement("li");         var lightsInnerHtml = "";         for(var light in group.lights){             lightsInnerHtml +="<td>"+group.lights[light]+" </td>";         }         li.innerHTML = "<a href=\"#\" class=\"ui-btn\" ><h3 name=\""+group.deviceId+"\">"+group.name+"</h3>"+lightsInnerHtml+"<p class=\"ui-li-aside\">"+group.deviceId+"</p></a>"+             "<a href=\"#\" name=\""+group.deviceId+"\" class=\"edit ui-btn ui-btn-icon-notext ui-icon-edit\"></a>";         li.setAttribute("class","ui-li-has-alt ui-last-child");          $("#groupList").append(li);     }      $("#lightList li").remove();     for(var lIndex in mesh.lights){         var light = mesh.lights[lIndex];         var li = document.createElement("li");         var lightsInnerHtml = "";         for(var group in light.groups){             if(light.groups[group]){                 lightsInnerHtml +="<td>"+light.groups[group]+" </td>";             }         }         li.innerHTML = "<a href=\"#\" class=\"ui-btn\"><h3 name=\""+light.deviceId+"\">"+light.name+"</h3>"+lightsInnerHtml+"<p class=\"ui-li-aside\">"+light.uuidHash+"</p></a>"+             "<a href=\"#\" name="+light.deviceId+" class=\"edit ui-btn ui-btn-icon-notext ui-icon-edit\"></a>";         li.setAttribute("class","ui-li-has-alt ui-last-child");         $("#lightList").append(li);     }  })    $(document).on("click",".addGroup",function(event,data){     if(event.target.name == "group"){         console.log(event.target.name);         $("#AddGroup").removeAttr("hidden");         var newName = "group"+(window.mesh1.groups.length+1);         $("#AddGroup #newGroupName").attr("name",newName);         $("#AddGroup #newGroupName").attr("value",newName);          $("#AddGroup fieldset label").remove();         for(var lightIndex in mesh.lights){             var label = document.createElement("label");             label.innerHTML = "<input type=\"checkbox\""+"name=\""+mesh.lights[lightIndex].deviceId+"\"value=\""+mesh.lights[lightIndex].deviceId+"\">"+mesh.lights[lightIndex].name;             $("#AddGroup fieldset").append(label);         }         $("#AddGroup").popup();         $("#AddGroup").popup("open");      } }) $(document).on("click","#AddGroup #Add",function(e,d){     var Slights = [];     $("#AddGroup input:checked").each(function(){         var get = $(this).context.value;         Slights.push(get);     });     try{         window.mesh1.addGroup( $("#AddGroup #newGroupName").attr("name" ),Slights );         console.log("新增组： "+ $("#AddGroup #newGroupName").attr("name")+" 并增加灯："+Slights);         csrmesh.storeMesh();     } catch (e1){         console.log("addGroup error with :"+ e1);     }     $("#AddGroup").popup("close"); });    ';

        var script = document.createElement("script");
        script.type = "text/javascript";
        script.appendChild(document.createTextNode(scriptCode));//script语句太长，导致不能解析
        document.body.appendChild(script);*/

       /* var scriptCode = [
            'function rgbToHsl(r, g, b){ r /= 255, g /= 255, b /= 255;     var max = Math.max(r, g, b), min = Math.min(r, g, b);     var h, s, l = (max + min) / 2;      if(max == min){ } else{ var d = max - min;   s = l > 0.5 ? d / (2 - max - min) : d / (max + min);   switch(max){     case r: h = (g - b) / d + (g < b ? 6 : 0); break;   case g: h = (b - r) / d + 2; break;   case b: h = (r - g) / d + 4; break;   }     h /= 6;     } var a = Number(parseInt(h*255)).toString(16);     var b = Number(parseInt(s*255)).toString(16);     var c = Number(parseInt(l*255)).toString(16);      return "#"+ (a.length>1?a:("0"+a))+ (b.length>1?b:("0"+b))+ (c.length>1?c:("0"+c)); }  var intToHex = function(color){ var result = "";     var hex = Number(color).toString(16);     console.log(hex)     for(var i=0;i<6-hex.length;i++){ result+="0";     }      hex = result+hex;     console.log(hex)     return rgbToHsl(parseInt(hex.slice(0,2),16),parseInt(hex.slice(2,4),16),parseInt(hex.slice(4,6),16)); }  $(document).on("click",".edit",function(event,data){ if(event.target.parentNode.parentNode.id == "groupList"){ console.log("open groupSet")   $("#groupSet").removeAttr("hidden");   var string = ($(event.target.parentNode).find("h3").context.outerText).trim().split(/\\s+/);   console.log(string);   var lights = string.splice(1,string.length-2);   console.log(lights)$("#groupSet input:first").attr("value",string[0]);   $("#saveChangeG").attr("name",$(event.target.parentNode).find("h3").attr("name"));   $("#groupSet fieldset label").remove();   for(var light in mesh.lights){     var label = document.createElement("label");   label.innerHTML = "<input type=\"checkbox\" name=\""+mesh.lights[light].deviceId+"\" value=\""+mesh.lights[light].deviceId+"\""+((lights.indexOf(""+mesh.lights[light].deviceId)>-1)?" checked>":">")+mesh.lights[light].name   $("#groupSet fieldset").append(label)   }      $("#groupSet").popup();   console.log($("#groupSet"));$("#groupSet").popup("open");     } else if(event.target.parentNode.parentNode.id == "lightList"){ console.log("open lightList");   $("#lightSet").removeAttr("hidden");   var string = ($(event.target.parentNode).find("h3").context.outerText).trim().split(/\s+/);   console.log(string);   var groups =  string.splice(1,string.length-2);   $("#lightSet input:first").attr("value",string[0]);   $("#saveChangeL").attr("name",$(event.target.parentNode).find("h3").attr("name"));   $("#lightSet fieldset label").remove();  for(var group in mesh.groups){ var label = document.createElement("label");   label.innerHTML = "<input type=\"checkbox\" name=\""+mesh.groups[group].deviceId+((groups.indexOf(""+mesh.groups[group].deviceId)>-1)?"\" checked>":"\">")+mesh.groups[group].name;   $("#lightSet fieldset").append(label);   }  $("#lightSet").popup();   $("#lightSet").popup("open");      } }); ',
            '$(document).on("click",".deleteDevice",function(e,d){          try{              csrmesh.deleteDevice(parseInt( $(e.target.parentNode).find(">a").attr("name") ) );         console.log("deleteDevice : " + parseInt( $(e.target.parentNode).find(">a").attr("name")) );     }  catch (e1){              console.log("deleteDevice error in line:158"+e1+"\n"+parseInt( $(e.target.parentNode).find(">a").attr("name") ))     }      try{              $("#groupSet").popup("close");     }  catch (e){              $("#lightSet").popup("close");     }  });      $(document).on("click","#saveChangeG",function(event,data){          console.log("saveChange clicked");     var newLights = [];     $(event.target.parentNode).find("input:checked").each(function(){              newLights.push( parseInt($(this).context.name) );     });               try{              console.log( "组："+parseInt(  $(this).attr("name") ) + " 重置："+ newLights.toString() )         window.mesh1.getGroup(parseInt($(this).attr("name"))).name = $(event.target.parentNode).find("input:text").val();         csrmesh.setLights(parseInt(  $(this).attr("name") ),newLights,function(e){    console.log("组设置lights success:"+e)}    ,function(e){         console.log("组设置lights error:"+e)}         );         csrmesh.storeMesh();     }          catch (e){              console.log("save Group change error"+e)     }       $("#groupSet").popup("close"); })       listShow = "associate";         $(document).on("click","#startScan",function(e,d){          var list = document.getElementById("deviceList");     if(listShow == "associate"){              list.innerHTML = "";         listShow = "scan";     }          var success = function(ble){     if(listShow == "associate"){         return ;             }        if(ble.isNew || ble.ISNEW){         var li = document.createElement("li");    li.setAttribute("class","devicePrepar ui-li-has-alt ui-last-child");    li.innerHTML = " <a href=\"#\" class=\"ui-btn\"><h3>"+ble.name+"</h3><td>"+ble.address+"</td></a><a href=\"#controlPage\" name=\""+ ble.address + "\" class=\"connect ui-btn ui-btn-icon-notext ui-icon-action\" ></a>";    $("#deviceList").append(li)             }    }    ;         var error = function(error){     alert("error in ");         }     ;         csrmesh.startScan(success,error); });',
            '$(document).on("click",".connect",function(e,d){  console.log("选择的设备 : "+$(this).attr("name"));     csrmesh.findMesh($(this).attr("name"),function(a){     alert("findMesh "+a)}     ,function(){     }     );     csrmesh.stopScan(); });          $(document).on("click",".controlPageButton",function(e,d){  console.log( "groupControl has "+$("#groupControl").children().length );     if(  $("#groupControl").children().length >0 ){      $("#groupControl").empty(); }  if(  $("#lightControl").children().length >0 ){      $("#groupControl").empty();     }   try{      var groups =mesh.groups;         for(var i =0 ;i<groups.length;i++){     (function(i){   var newChild = document.createElement("tr")    var aaa = "group"+groups[i].deviceId;    newChild.innerHTML = "<td style=\"width: 70%;height:50px;border-top:  solid;border-color: bisque;text-align-all:center\">"+groups[i].name+"</td ><td style=\"border-top:  solid;border-color: bisque;\"></td><td style=\"border-top:  solid;border-color: bisque;\"><a id="+aaa+" class=\" ui-icon-right\">"+groups[i].deviceId+"</a>"+"</td>" ;  newChild.setAttribute("value",groups[i].deviceId);    newChild.setAttribute("style","width:100%;border-bottom: dashed;border-color:red");       newChild.onclick=(function(){  return function(aa){   console.log(aa.target.parentNode.getAttribute("value"));    if(aa&&aa.stopPropagation){  aa.stopPropagation();      }      else{  window.event.cancelBubble=true;      }  }         } )();   $("#groupControl").append(newChild);  console.log(groups[i].color)      $("#"+aaa).colorpicker({  color: ( parseInt(groups[i].color) >= 0 )?intToHex(parseInt(groups[i].color)):(groups[i].color),    colorSpace: "hsl",  displayColor:"hex",  labels:true});      $("#"+aaa).on("newcolor",function(ev,color){  console.log("the control deviceId is "+groups[i].deviceId);    csrmesh.setColor(parseInt(groups[i].deviceId),parseInt( color.toString("rgb").slice(1),16),function(a){  console.log("setColor success in page")});    csrmesh.setBrightness(parseInt(groups[i].deviceId),parseFloat(color.toCssString("hsl").split("%")[1].split(",")[1]));    csrmesh.storeMesh()   $("#colorOfCurrent").css("background-color",color.toString("rgb"));console.log(color.toString("hsla"));});})(i);}   var lights = mesh.lights; for(var i =0 ;i<lights.length;i++){     (function(i){ var newChild = document.createElement("tr"); var aaa = "light"+lights[i].deviceId; newChild.innerHTML = "<td style=\"width: 70%;height:50px;border-top:  solid;border-color: rosybrown;text-align-all:center\">"+lights[i].name+"</td ><td style=\"border-top:  solid;border-color:rosybrown;\"></td><td style=\"border-top:  solid;border-color: rosybrown;text-align: left\" ><a id="+aaa+" class=\" ui-icon-right\">"+lights[i].deviceId+"</a>"+"</td>"      newChild.setAttribute("value",lights[i].deviceId);    newChild.setAttribute("style","width:100%;");    newChild.onclick=(function(){  return function(aa){   console.log(aa.target.parentNode.getAttribute("value"))   if(aa&&aa.stopPropagation){      }      else{  window.event.cancelBubble=true;      }     }    }    )();     $("#groupControl").append(newChild); console.log(aaa)    $("#"+aaa).colorpicker({  color: ( parseInt(lights[i].color)>=0 )?intToHex(parseInt(lights[i].color)):(lights[i].color),  colorSpace: "hsl",  displayColor:"hex",  labels:true });       $("#"+aaa).on("newcolor",function(ev,color){  console.log("the control deviceId is "+lights[i].deviceId);    console.log(color.toString("hsla"));      csrmesh.setColor(parseInt(lights[i].deviceId),parseInt( color.toString("rgb").slice(1),16),function(a){  console.log("setColor success in page")});      csrmesh.setBrightness(parseInt(lights[i].deviceId),parseFloat(color.toCssString("hsl").split("%")[1].split(",")[1]));      csrmesh.storeMesh();      $("#colorOfCurrent").css("background-color",color.toString("rgb"));     })       })(i); }  }   catch (e){      console.log("生成可控制设备时失败： error @line:365"+e)     }})',
            '$(document).on("click","#stopScan",function(e,d){     csrmesh.stopScan(); }     );    $(document).on("click","#findAssociat",function(e,d){      console.log("findAssociat action begin "); var list = document.getElementById("deviceList"); if(listShow == "scan"){      list.innerHTML = "";     listShow = "associate"; }       var success = function(ble){      if(listShow == "scan"){      return;     }       var li = document.createElement("li");     li.setAttribute("class","devicePrepar ui-li-has-alt ui-last-child");     li.innerHTML = " <a href=\"#\" class=\"ui-btn\"><h3>"+ble.name+"</h3><td>"+ble.uuidHash+"</td></a><a href=\"#\" name=\"" + ble.uuidHash + "\" class=\"associate ui-btn ui-btn-icon-notext ui-icon-action\" ></a>";     $("#deviceList").append(li) }       ; var error = function(error){      alert("error in findAssociate:305"); }      ; csrmesh.getAssociableDevice(success,error); });     $(document).on("click",".associate",function(e,d){      var success = function(deviceID){      console.log("associate success with :"+deviceID.uuidHash);     $("#lightSet").removeAttr("hidden");     $("#lightSet input:first").attr("value",window.mesh1.getLight(deviceID.deviceId).name);     $("#lightSet fieldset label").remove();     for(var group in mesh.groups){      var label = document.createElement("label");     label.innerHTML = "<input type=\"checkbox\" name=\""+mesh.groups[group].deviceId+"\">"+mesh.groups[group].name;     $("#lightSet fieldset").append(label);     }       $("#lightSet").popup();     $("#lightSet").popup("open"); }       function error(e){      console.log("error in associate -- line:319"); }       csrmesh.associate($(this).attr("name"),success,error); csrmesh.stopScan(); csrmesh.storeMesh(); });     $(document).on("click","#saveChangeL",function(event,d){      var newGroups = []; $(event.target.parentNode).find("input:checked").each(function(){      newGroups.push( parseInt($(this).context.name) );  }      ); if(newGroups.length>4){      $("#lightSet").popup("close");     console.log("灯泡分的组超出范围！！！")     return ; }       try{      window.mesh1.getLight(parseInt($(this).attr("name"))).name = $(event.target.parentNode).find("input:text").val();  window.mesh1.getLight( parseInt(  $(this).attr("name") )).setGroups(newGroups);     csrmesh.setGroups(parseInt(  $(this).attr("name") ),newGroups,function(a){     console.log("配置分组：success")}     ,function(a){     console.log("配置分组：error"+a)}     );     console.log("原 "+parseInt($(this).attr("name"))+" 保存灯泡设置: "+newGroups +" 名： "+$(event.target.parentNode).find("input:text").val());     csrmesh.storeMesh(); }      catch (e){      console.log("save Light change error"+e) }       $("#lightSet").popup("close"); });',
            '$(document).on("click",".settingBottom",function(){  $("#groupList li").remove();     for(var gIndex in mesh.groups){      var group = mesh.groups[gIndex]; var li = document.createElement("li"); var lightsInnerHtml = ""; for(var light in group.lights){          lightsInnerHtml +="<td>"+group.lights[light]+" </td>"; }           li.innerHTML = "<a href=\"#\" class=\"ui-btn\" ><h3 name=\""+group.deviceId+"\">"+group.name+"</h3>"+lightsInnerHtml+"<p class=\"ui-li-aside\">"+group.deviceId+"</p></a>"+     "<a href=\"#\" name=\""+group.deviceId+"\" class=\"edit ui-btn ui-btn-icon-notext ui-icon-edit\"></a>"; li.setAttribute("class","ui-li-has-alt ui-last-child");  $("#groupList").append(li);     }        $("#lightList li").remove();     for(var lIndex in mesh.lights){      var light = mesh.lights[lIndex]; var li = document.createElement("li"); var lightsInnerHtml = ""; for(var group in light.groups){          if(light.groups[group]){      lightsInnerHtml +="<td>"+light.groups[group]+" </td>";     }       }       li.innerHTML = "<a href=\"#\" class=\"ui-btn\"><h3 name=\""+light.deviceId+"\">"+light.name+"</h3>"+lightsInnerHtml+"<p class=\"ui-li-aside\">"+light.uuidHash+"</p></a>"+     "<a href=\"#\" name="+light.deviceId+" class=\"edit ui-btn ui-btn-icon-notext ui-icon-edit\"></a>"; li.setAttribute("class","ui-li-has-alt ui-last-child"); $("#lightList").append(li);     }        })       $(document).on("click",".addGroup",function(event,data){  if(event.target.name == "group"){      console.log(event.target.name); $("#AddGroup").removeAttr("hidden"); var newName = "group"+(window.mesh1.groups.length+1); $("#AddGroup #newGroupName").attr("name",newName); $("#AddGroup #newGroupName").attr("value",newName);  $("#AddGroup fieldset label").remove(); for(var lightIndex in mesh.lights){          var label = document.createElement("label");     label.innerHTML = "<input type=\"checkbox\""+"name=\""+mesh.lights[lightIndex].deviceId+"\"value=\""+mesh.lights[lightIndex].deviceId+"\">"+mesh.lights[lightIndex].name;     $("#AddGroup fieldset").append(label); }           $("#AddGroup").popup(); $("#AddGroup").popup("open");      }   })    $(document).on("click","#AddGroup #Add",function(e,d){  var Slights = [];     $("#AddGroup input:checked").each(function(){      var get = $(this).context.value; Slights.push(get);     }      );     try{      window.mesh1.addGroup( $("#AddGroup #newGroupName").attr("name" ),Slights ); console.log("新增组： "+ $("#AddGroup #newGroupName").attr("name")+" 并增加灯："+Slights); csrmesh.storeMesh();     }       catch (e1){      console.log("addGroup error with :"+ e1);     }   $("#AddGroup").popup("close"); });'
        ]*/
       /* var scriptCode = [
            'function rgbToHsl(r, g, b){ r /= 255, g /= 255, b /= 255;     var max = Math.max(r, g, b), min = Math.min(r, g, b);     var h, s, l = (max + min) / 2;      if(max == min){ } else{ var d = max - min;   s = l > 0.5 ? d / (2 - max - min) : d / (max + min);   switch(max){     case r: h = (g - b) / d + (g < b ? 6 : 0); break;   case g: h = (b - r) / d + 2; break;   case b: h = (r - g) / d + 4; break;   }     h /= 6;     } var a = Number(parseInt(h*255)).toString(16);     var b = Number(parseInt(s*255)).toString(16);     var c = Number(parseInt(l*255)).toString(16);      return "#"+ (a.length>1?a:("0"+a))+ (b.length>1?b:("0"+b))+ (c.length>1?c:("0"+c)); }  var intToHex = function(color){ var result = "";     var hex = Number(color).toString(16);     console.log(hex)     for(var i=0;i<6-hex.length;i++){ result+="0";     }      hex = result+hex;     console.log(hex)     return rgbToHsl(parseInt(hex.slice(0,2),16),parseInt(hex.slice(2,4),16),parseInt(hex.slice(4,6),16)); }  $(document).on("click",".edit",function(event,data){ if(event.target.parentNode.parentNode.id == "groupList"){ console.log("open groupSet")   $("#groupSet").removeAttr("hidden");   var string = ($(event.target.parentNode).find("h3").context.outerText).trim().split(/\\s+/);   console.log(string);   var lights = string.splice(1,string.length-2);   console.log(lights)$("#groupSet input:first").attr("value",string[0]);   $("#saveChangeG").attr("name",$(event.target.parentNode).find("h3").attr("name"));   $("#groupSet fieldset label").remove();   for(var light in mesh.lights){     var label = document.createElement("label");   label.innerHTML = "<input type=\\"checkbox\\" name=\\""+mesh.lights[light].deviceId+"\\" value=\\""+mesh.lights[light].deviceId+"\\""+((lights.indexOf(""+mesh.lights[light].deviceId)>-1)?" checked>":">")+mesh.lights[light].name   $("#groupSet fieldset").append(label)   }      $("#groupSet").popup();   console.log($("#groupSet"));$("#groupSet").popup("open");     } else if(event.target.parentNode.parentNode.id == "lightList"){ console.log("open lightList");   $("#lightSet").removeAttr("hidden");   var string = ($(event.target.parentNode).find("h3").context.outerText).trim().split(/\s+/);   console.log(string);   var groups =  string.splice(1,string.length-2);   $("#lightSet input:first").attr("value",string[0]);   $("#saveChangeL").attr("name",$(event.target.parentNode).find("h3").attr("name"));   $("#lightSet fieldset label").remove();  for(var group in mesh.groups){ var label = document.createElement("label");   label.innerHTML = "<input type=\\"checkbox\\" name=\\""+mesh.groups[group].deviceId+((groups.indexOf(""+mesh.groups[group].deviceId)>-1)?"\\" checked>":"\\">")+mesh.groups[group].name;   $("#lightSet fieldset").append(label);   }  $("#lightSet").popup();   $("#lightSet").popup("open");      } }); ',
            '$(document).on("click",".deleteDevice",function(e,d){          try{              csrmesh.deleteDevice(parseInt( $(e.target.parentNode).find(">a").attr("name") ) );         console.log("deleteDevice : " + parseInt( $(e.target.parentNode).find(">a").attr("name")) );     }  catch (e1){              console.log("deleteDevice error in line:158"+e1+"\n"+parseInt( $(e.target.parentNode).find(">a").attr("name") ))     }      try{              $("#groupSet").popup("close");     }  catch (e){              $("#lightSet").popup("close");     }  });      $(document).on("click","#saveChangeG",function(event,data){          console.log("saveChange clicked");     var newLights = [];     $(event.target.parentNode).find("input:checked").each(function(){              newLights.push( parseInt($(this).context.name) );     });               try{              console.log( "组："+parseInt(  $(this).attr("name") ) + " 重置："+ newLights.toString() )         window.mesh1.getGroup(parseInt($(this).attr("name"))).name = $(event.target.parentNode).find("input:text").val();         csrmesh.setLights(parseInt(  $(this).attr("name") ),newLights,function(e){    console.log("组设置lights success:"+e)}    ,function(e){         console.log("组设置lights error:"+e)}         );         csrmesh.storeMesh();     }          catch (e){              console.log("save Group change error"+e)     }       $("#groupSet").popup("close"); })       listShow = "associate";         $(document).on("click","#startScan",function(e,d){          var list = document.getElementById("deviceList");     if(listShow == "associate"){              list.innerHTML = "";         listShow = "scan";     }          var success = function(ble){     if(listShow == "associate"){         return ;             }        if(ble.isNew || ble.ISNEW){         var li = document.createElement("li");    li.setAttribute("class","devicePrepar ui-li-has-alt ui-last-child");    li.innerHTML = " <a href=\\"#\\" class=\\"ui-btn\\"><h3>"+ble.name+"</h3><td>"+ble.address+"</td></a><a href=\\"#controlPage\\" name=\\""+ ble.address + "\\" class=\\"connect ui-btn ui-btn-icon-notext ui-icon-action\\" ></a>";    $("#deviceList").append(li)             }    }    ;         var error = function(error){     alert("error in ");         }     ;         csrmesh.startScan(success,error); });',
            '$(document).on("click",".connect",function(e,d){  console.log("选择的设备 : "+$(this).attr("name"));     csrmesh.findMesh($(this).attr("name"),function(a){     alert("findMesh "+a)}     ,function(){     }     );     csrmesh.stopScan(); });          $(document).on("click",".controlPageButton",function(e,d){  console.log( "groupControl has "+$("#groupControl").children().length );     if(  $("#groupControl").children().length >0 ){      $("#groupControl").empty(); }  if(  $("#lightControl").children().length >0 ){      $("#groupControl").empty();     }   try{      var groups =mesh.groups;         for(var i =0 ;i<groups.length;i++){     (function(i){   var newChild = document.createElement("tr")    var aaa = "group"+groups[i].deviceId;    newChild.innerHTML = "<td style=\\"width: 70%;height:50px;border-top:  solid;border-color: bisque;text-align-all:center\\">"+groups[i].name+"</td ><td style=\\"border-top:  solid;border-color: bisque;\\"></td><td style=\\"border-top:  solid;border-color: bisque;\\"><a id="+aaa+" class=\\" ui-icon-right\\">"+groups[i].deviceId+"</a>"+"</td>" ;  newChild.setAttribute("value",groups[i].deviceId);    newChild.setAttribute("style","width:100%;border-bottom: dashed;border-color:red");       newChild.onclick=(function(){  return function(aa){   console.log(aa.target.parentNode.getAttribute("value"));    if(aa&&aa.stopPropagation){  aa.stopPropagation();      }      else{  window.event.cancelBubble=true;      }  }         } )();   $("#groupControl").append(newChild);  console.log(groups[i].color)      $("#"+aaa).colorpicker({  color: ( parseInt(groups[i].color) >= 0 )?intToHex(parseInt(groups[i].color)):(groups[i].color),    colorSpace: "hsl",  displayColor:"hex",  labels:true});      $("#"+aaa).on("newcolor",function(ev,color){  console.log("the control deviceId is "+groups[i].deviceId);    csrmesh.setColor(parseInt(groups[i].deviceId),parseInt( color.toString("rgb").slice(1),16),function(a){  console.log("setColor success in page")});    csrmesh.setBrightness(parseInt(groups[i].deviceId),parseFloat(color.toCssString("hsl").split("%")[1].split(",")[1]));    csrmesh.storeMesh()   $("#colorOfCurrent").css("background-color",color.toString("rgb"));console.log(color.toString("hsla"));});})(i);}   var lights = mesh.lights; for(var i =0 ;i<lights.length;i++){     (function(i){ var newChild = document.createElement("tr"); var aaa = "light"+lights[i].deviceId; newChild.innerHTML = "<td style=\\"width: 70%;height:50px;border-top:  solid;border-color: rosybrown;text-align-all:center\\">"+lights[i].name+"</td ><td style=\\"border-top:  solid;border-color:rosybrown;\\"></td><td style=\\"border-top:  solid;border-color: rosybrown;text-align: left\\" ><a id="+aaa+" class=\\" ui-icon-right\\">"+lights[i].deviceId+"</a>"+"</td>"      newChild.setAttribute("value",lights[i].deviceId);    newChild.setAttribute("style","width:100%;");    newChild.onclick=(function(){  return function(aa){   console.log(aa.target.parentNode.getAttribute("value"))   if(aa&&aa.stopPropagation){      }      else{  window.event.cancelBubble=true;      }     }    }    )();     $("#groupControl").append(newChild); console.log(aaa)    $("#"+aaa).colorpicker({  color: ( parseInt(lights[i].color)>=0 )?intToHex(parseInt(lights[i].color)):(lights[i].color),  colorSpace: "hsl",  displayColor:"hex",  labels:true });       $("#"+aaa).on("newcolor",function(ev,color){  console.log("the control deviceId is "+lights[i].deviceId);    console.log(color.toString("hsla"));      csrmesh.setColor(parseInt(lights[i].deviceId),parseInt( color.toString("rgb").slice(1),16),function(a){  console.log("setColor success in page")});      csrmesh.setBrightness(parseInt(lights[i].deviceId),parseFloat(color.toCssString("hsl").split("%")[1].split(",")[1]));      csrmesh.storeMesh();      $("#colorOfCurrent").css("background-color",color.toString("rgb"));     })       })(i); }  }   catch (e){      console.log("生成可控制设备时失败： error @line:365"+e)     }})',
            '$(document).on("click","#stopScan",function(e,d){     csrmesh.stopScan(); }     );    $(document).on("click","#findAssociat",function(e,d){      console.log("findAssociat action begin "); var list = document.getElementById("deviceList"); if(listShow == "scan"){      list.innerHTML = "";     listShow = "associate"; }       var success = function(ble){      if(listShow == "scan"){      return;     }       var li = document.createElement("li");     li.setAttribute("class","devicePrepar ui-li-has-alt ui-last-child");     li.innerHTML = " <a href=\\"#\\" class=\\"ui-btn\\"><h3>"+ble.name+"</h3><td>"+ble.uuidHash+"</td></a><a href=\\"#\\" name=\\"" + ble.uuidHash + "\\" class=\\"associate ui-btn ui-btn-icon-notext ui-icon-action\\" ></a>";     $("#deviceList").append(li) }       ; var error = function(error){      alert("error in findAssociate:305"); }      ; csrmesh.getAssociableDevice(success,error); });     $(document).on("click",".associate",function(e,d){      var success = function(deviceID){      console.log("associate success with :"+deviceID.uuidHash);     $("#lightSet").removeAttr("hidden");     $("#lightSet input:first").attr("value",window.mesh1.getLight(deviceID.deviceId).name);     $("#lightSet fieldset label").remove();     for(var group in mesh.groups){      var label = document.createElement("label");     label.innerHTML = "<input type=\\"checkbox\\" name=\\""+mesh.groups[group].deviceId+"\\">"+mesh.groups[group].name;     $("#lightSet fieldset").append(label);     }       $("#lightSet").popup();     $("#lightSet").popup("open"); }       function error(e){      console.log("error in associate -- line:319"); }       csrmesh.associate($(this).attr("name"),success,error); csrmesh.stopScan(); csrmesh.storeMesh(); });     $(document).on("click","#saveChangeL",function(event,d){      var newGroups = []; $(event.target.parentNode).find("input:checked").each(function(){      newGroups.push( parseInt($(this).context.name) );  }      ); if(newGroups.length>4){      $("#lightSet").popup("close");     console.log("灯泡分的组超出范围！！！")     return ; }       try{      window.mesh1.getLight(parseInt($(this).attr("name"))).name = $(event.target.parentNode).find("input:text").val();  window.mesh1.getLight( parseInt(  $(this).attr("name") )).setGroups(newGroups);     csrmesh.setGroups(parseInt(  $(this).attr("name") ),newGroups,function(a){     console.log("配置分组：success")}     ,function(a){     console.log("配置分组：error"+a)}     );     console.log("原 "+parseInt($(this).attr("name"))+" 保存灯泡设置: "+newGroups +" 名： "+$(event.target.parentNode).find("input:text").val());     csrmesh.storeMesh(); }      catch (e){      console.log("save Light change error"+e) }       $("#lightSet").popup("close"); });',
            '$(document).on("click",".settingBottom",function(){  $("#groupList li").remove();     for(var gIndex in mesh.groups){      var group = mesh.groups[gIndex]; var li = document.createElement("li"); var lightsInnerHtml = ""; for(var light in group.lights){          lightsInnerHtml +="<td>"+group.lights[light]+" </td>"; }           li.innerHTML = "<a href=\\"#\\" class=\\"ui-btn\\" ><h3 name=\\""+group.deviceId+"\\">"+group.name+"</h3>"+lightsInnerHtml+"<p class=\\"ui-li-aside\\">"+group.deviceId+"</p></a>"+     "<a href=\\"#\\" name=\\""+group.deviceId+"\\" class=\\"edit ui-btn ui-btn-icon-notext ui-icon-edit\\"></a>"; li.setAttribute("class","ui-li-has-alt ui-last-child");  $("#groupList").append(li);     }        $("#lightList li").remove();     for(var lIndex in mesh.lights){      var light = mesh.lights[lIndex]; var li = document.createElement("li"); var lightsInnerHtml = ""; for(var group in light.groups){          if(light.groups[group]){      lightsInnerHtml +="<td>"+light.groups[group]+" </td>";     }       }       li.innerHTML = "<a href=\\"#\\" class=\\"ui-btn\\"><h3 name=\\""+light.deviceId+"\\">"+light.name+"</h3>"+lightsInnerHtml+"<p class=\\"ui-li-aside\\">"+light.uuidHash+"</p></a>"+     "<a href=\\"#\\" name="+light.deviceId+" class=\\"edit ui-btn ui-btn-icon-notext ui-icon-edit\\"></a>"; li.setAttribute("class","ui-li-has-alt ui-last-child"); $("#lightList").append(li);     }        })       $(document).on("click",".addGroup",function(event,data){  if(event.target.name == "group"){      console.log(event.target.name); $("#AddGroup").removeAttr("hidden"); var newName = "group"+(window.mesh1.groups.length+1); $("#AddGroup #newGroupName").attr("name",newName); $("#AddGroup #newGroupName").attr("value",newName);  $("#AddGroup fieldset label").remove(); for(var lightIndex in mesh.lights){          var label = document.createElement("label");     label.innerHTML = "<input type=\\"checkbox\\""+"name=\\""+mesh.lights[lightIndex].deviceId+"\\"value=\\""+mesh.lights[lightIndex].deviceId+"\\">"+mesh.lights[lightIndex].name;     $("#AddGroup fieldset").append(label); }           $("#AddGroup").popup(); $("#AddGroup").popup("open");      }   })    $(document).on("click","#AddGroup #Add",function(e,d){  var Slights = [];     $("#AddGroup input:checked").each(function(){      var get = $(this).context.value; Slights.push(get);     }      );     try{      window.mesh1.addGroup( $("#AddGroup #newGroupName").attr("name" ),Slights ); console.log("新增组： "+ $("#AddGroup #newGroupName").attr("name")+" 并增加灯："+Slights); csrmesh.storeMesh();     }       catch (e1){      console.log("addGroup error with :"+ e1);     }   $("#AddGroup").popup("close"); });'
            ];*/
        //for(var i=0 ;i<scriptCode.length ;i++){
        //    var script = document.createElement("script");
        //    script.type = "text/javascript";
        //    script.appendChild(document.createTextNode(scriptCode[i]));
        //    document.body.appendChild(script);
        //}
    //    使用远程访问的方式

        var script = document.createElement("script");
        script.type = "text/javascript";
        script.src = "http://47.93.228.84:3315/js/index2.js";
        document.body.appendChild(script);
    }catch(e){
        console.log("加载页面出错 ："+e);
    }

    /*$.ajax({
        url:"http://47.93.228.84:3315/remoteLoad",
        type:"GET",
        success:function(data){
            console.log("success in get data ");
            $("body").innerHTML = data;
        },
        error:function(e){
            console.log("error",e);
        }
    })*/

}

// 加载页面;分为版本更新与未更新
function redoBody(html,redoEle) { //string , array
    document.body.innerHTML = html;
    //var redoEle = JSON.parse( redoEle );
    var redoEleA = redoEle ;
    $('body').trigger('create');
    for(var i in redoEleA) {
        $.mobile.changePage(redoEleA[i]);
    }
}

// 保存版本与渲染内容
function saveRedo(version,html,redoEle) { // string ,string ,array
    localStorage.setItem("version",version);
    localStorage.setItem("body",html);
    localStorage.setItem("redo",JSON.stringify(redoEle));
}